//Question link-https://leetcode.com/problems/ipo/description/


class Solution {
public:
    int findMaximizedCapital(int k, int w, vector<int>& profits, vector<int>& capital) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        priority_queue<int> mh;
        for(int i=0;i<profits.size();i++){
            pq.push({capital[i],profits[i]});
        }
        while(k>0){
            while(!pq.empty() and w>=pq.top().first){
                int c=pq.top().first;
                int p=pq.top().second;
                mh.push(p);
                pq.pop();
            }
            if(!mh.empty()){
                w+=mh.top();
                k--;
                mh.pop();
            }
            else{
                break;
            }
        }
        return w;
    }
};