//Question link-https://leetcode.com/problems/invalid-transactions/description/

class Solution {
public:
    vector<string> findvalues(string s){
        vector<string> v;
        string x="";
        for(int i=1;i<s.size();i++){
            if(s[i]==','){
                v.push_back(x);
                x="";
                continue;
            }
            x+=s[i];
        }
        v.push_back(x);
        return v;
    }
    vector<string> invalidTransactions(vector<string>& transactions) {
        int n=transactions.size();
        map<string,vector<string>> mp;
        for(int i=0;i<n;i++){
            string x="";
            int j=0;
            for(j=0;j<transactions[i].size();j++){
                if(transactions[i][j]==','){
                    break;
                }
                x+=transactions[i][j];
            }
            mp[x].push_back(transactions[i].substr(j));
        }
        set<string> st;
        for(auto x:mp){
            int n=x.second.size();
            for(int i=0;i<n;i++){
                if(st.find(x.second[i])!=st.end()){
                    continue;
                }
                vector<string> values1=findvalues(x.second[i]);
                for(int j=i+1;j<n;j++){
                    vector<string> values2=findvalues(x.second[j]);
                    if(values1[2]!=values2[2] && abs((stoi(values1[0]))-(stoi(values2[0])))<=60){
                        st.insert(x.first+x.second[i]);
                        st.insert(x.first+x.second[j]);
                    }
                }
            }
        }
        vector<string> ans;
        map<string,int> m1;
        for(auto x:transactions){
            vector<string> v=findvalues(x);
            int p=stoi(v[2]);
            if(p>1000){
                st.insert(x);
            }
            m1[x]++;
        }
        for(auto x:st){
            while(m1[x]>0){
                m1[x]--;
                ans.push_back(x);
            }
        }
        return ans;
    }
};