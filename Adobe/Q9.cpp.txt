//Question link-https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=0;
    vector<int> solve(TreeNode *root){
        if(root==NULL){
            return {0,0};
        }
        vector<int> l=solve(root->left);
        vector<int> r=solve(root->right);
        int sum=l[0]+r[0]+root->val;
        int count=l[1]+r[1]+1;
        if((sum/count)==root->val){
            ans++;
        }
        return {sum,count};
    }
    int averageOfSubtree(TreeNode* root) {
         solve(root);
         return ans;
    }
};