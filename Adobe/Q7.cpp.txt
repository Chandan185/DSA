//Questionlink-https://leetcode.com/problems/number-of-matching-subsequences/description/

class Solution {
public:
    int numMatchingSubseq(string s, vector<string>& words) {
        unordered_map<char,vector<int>> mp;
        for(int i=0;i<s.size();i++){
            mp[s[i]].push_back(i);
        }
        int ans=0;
        for(int i=0;i<words.size();i++){
            int ind=-1;
            int c=0;
            for(int j=0;j<words[i].size();j++){
                if(mp[words[i][j]].size()>0){
                    int it=upper_bound(mp[words[i][j]].begin(),mp[words[i][j]].end(),ind)-mp[words[i][j]].begin();
                    if(it==mp[words[i][j]].size()){
                        c=1;
                        break; 
                    }
                    ind=mp[words[i][j]][it];
                }
                else{
                    c=1;
                    break;
                }
            }
             if(c==0) ans++;
        }
        return ans;
    }
};