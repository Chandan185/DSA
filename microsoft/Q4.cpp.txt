//Questionlink-https://leetcode.com/problems/rotate-function/

class Solution {
public:
    int maxRotateFunction(vector<int>& nums) {

	//After observing you will find out it is the matter of addition and substraction only. Try deriving some recurrence using the testcases.
	//my recurrence- F(i)=F(i-1)-(sum[i to n])-sum[0 to (i-2)]+arr[i-1]*(n-1);
	//1-based indexing is used

        int n=nums.size();
        vector<int> sum(n+1,0);
        for(int i=1;i<=n;i++){
            sum[i]=sum[i-1]+nums[i-1];
        }
        vector<int> ans(n+1);
        for(int i=0;i<n;i++){
            ans[1]+=nums[i]*i;
        }
        for(int i=2;i<=n;i++){
            ans[i]=ans[i-1]-(sum[n]-sum[i-1])-sum[i-2]+nums[i-2]*(n-1);
        }
        int maxi=INT_MIN;
        for(int i=1;i<=n;i++){
            maxi=max(ans[i],maxi);
        }
        return maxi;
    }
};