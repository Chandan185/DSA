//Questionlink-https://leetcode.com/problems/house-robber-iii/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> solve(TreeNode* root){
        if(root==NULL){
            return {0,0};
        }
        vector<int> v1=solve(root->left);
        vector<int> v2=solve(root->right);
        return {root->val+v1[1]+v2[1],max(v1[0],v1[1])+max(v2[0],v2[1])};
    }
    int rob(TreeNode* root) {
        vector<int> ans=solve(root);
        return max(ans[0],ans[1]);   
    }
};