//Question link-https://leetcode.com/problems/top-k-frequent-words/description/

class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        map<string,int> mp;
        for(auto x:words){
            mp[x]++;
        }
        priority_queue<pair<int,string>> pq;
        for(auto &[x,y]:mp){
            pq.push({-y,x});
            if(pq.size()>k){
                pq.pop();
            }
        }
        vector<pair<int,string>> v;
        while(!pq.empty()){
            v.push_back(pq.top());
            pq.pop();
        }
        sort(v.begin(),v.end());
        vector<string> ans;
        for(auto x:v){
            ans.push_back(x.second);
        }
        return ans;
    }
};